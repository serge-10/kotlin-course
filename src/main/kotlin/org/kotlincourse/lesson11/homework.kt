package org.sergei.org.kotlincourse.lesson11

import org.sergei.org.kotlincourse.lesson4.keysToValues

fun main(){

    // Задание 1: Создание Пустого Словаря

    // Создайте пустой неизменяемый словарь, где ключи и значения - целые числа

    val myMap: Map<Int, Int> = mapOf()

    // Задание 2: Создание и Инициализация Словаря

    // Создайте словарь, инициализированный несколькими парами "ключ-значение", где ключи - float, а значения - double

    val myMap2: Map<Float, Double> = mapOf(10.4f to 21.0, 11.0f to 55.0)

    // Задание 3: Создание Изменяемого Словаря
    // Создайте изменяемый словарь, где ключи - целые числа, а значения - строки.

    val myMap3: Map<Int, String> = mutableMapOf(7 to "aa", 2 to "cc")

    // Задание 4: Добавление Элементов в Словарь
    // Имея изменяемый словарь, добавьте в него новые пары "ключ-значение".

    val myMap4: MutableMap<Int, String> = mutableMapOf(1 to "a", 2 to "b")

    myMap4[3] = "c"
    myMap4[4] = "d"

    // Задание 5: Получение Значений из Словаря
    // Используя словарь из предыдущего задания, извлеките значение, используя ключ.
    // Попробуй получить значение с ключом, которого в словаре нет.

    println(myMap4[2])      // Ответ "b"
    println(myMap4[10])     // Ответ null

    // Задание 6: Удаление Элементов из Словаря
    // Удалите определенный элемент из изменяемого словаря по его ключу.

    val myMap6: MutableMap<Int, String> = mutableMapOf(22 to "vase", 23 to "bed")

    myMap6.remove(23)       // Удалиться значение по ключу 23 to "bed"

    // Задание 7: Перебор Словаря в Цикле
    // Создайте словарь (ключи Double, значения Int) и выведи в цикле результат деления ключа на значение.
    // Не забудь обработать деление на 0 (в этом случае выведи слово “бесконечность”)

    val myMap7: MutableMap<Double, Int> = mutableMapOf(10.0 to 2, 12.1 to 3, 13.9 to 5, 15.0 to 0)

    for ((key, value) in myMap7) {
        if (value != 0) {
            println("Результат: ${key / value}")
        } else {
            println("Бесконечность")
        }
    }

    //


}