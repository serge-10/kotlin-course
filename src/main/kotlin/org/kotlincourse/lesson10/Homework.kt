package org.sergei.org.kotlincourse.lesson10

// Работа с массивами Array

//Задание 1: Создание и Инициализация Массива


fun main(){

    // Создайте массив из 5 целых чисел и инициализируйте его значениями от 1 до 5.

    val array1 = Array(5) { 0+1 }  // Создаем массив из 5 элементов, инициализированных нулями

    for (i in array1.indices) {  // Используем индексы массива
        array1[i] = i + 1  // Присваиваем значение каждому элементу
    }
    for (i in array1) {
        println(i)  // Выводим результат
    }

    // Задание 2: Создание Пустого Массива

    // Создайте пустой массив строк размером 10 элементов.

    val array2 = Array<String>(10) { "" }  // Создаем массив строк из 10 элементов
    for (i in array2.indices){
    }


    // Задание 3: Заполнение Массива в Цикле

    // Создайте массив из 5 элементов типа Double и заполните его значениями, являющимися удвоенным индексом элемента.

    val array3 = Array<Double>(5){ 0.0 }   // Создаем массив из 5 элементов типа Double
    for (elem in array3.indices){
        array3[elem] = elem * 2.0    // Присваиваем каждому элементу значение, равное удвоенному индексу
    }

    // Задание 4: Изменение Элементов Массива

    // Создайте массив из 5 элементов типа Int.
    // Используйте цикл, чтобы присвоить каждому элементу значение, равное его индексу, умноженному на 3.

    val array4 = Array(5){ 0 }  // Создаем массив из 5 элементов типа Int, инициализированный нулями
    for (elem in array4.indices){
        array4[elem] = elem * 3    // Присваиваем элементу значение: индекс * 3
    }

    // Задание 5: Работа с Nullable Элементами

    // Создайте массив из 3 nullable строк.
    // Инициализируйте его одним null значением и двумя строками.

    val array5Nullable = arrayOfNulls<String>(3)  // Создаем массив nullable строк

    array5Nullable[0] = null         // Инициализируем первый элемент как null
    array5Nullable[1] = "String 1"   // Второй элемент — строка
    array5Nullable[2] = "String 2"   // Третий элемент — строка

    // Задание 6: Копирование Массива

    // Создайте массив целых чисел и скопируйте его в новый массив в цикле.

    val array6 = arrayOf(1, 2, 3)             // Исходный массив
    val arrayCopy = Array(array6.size) { 0 }  // Создаем новый массив того же размера

    for (i in array6.indices) {
        arrayCopy[i] = array6[i]              // Копируем значения из исходного массива в новый
    }

    // Задание 7: Разница Двух Массивов

    // Создайте два массива целых чисел одинаковой длины.
    // Создайте третий массив, вычев значения одного из другого

    val array7_1 = arrayOf(1, 2, 3, 4)
    val array7_2 = arrayOf(5, 6, 7, 8)
    val arrayDifference = Array(array7_1.size) { 0 }    // Создаем массив для хранения результата

    for (i in array7_1.indices) {
        arrayDifference[i] = array7_1[i] - array7_2[i]  // Вычитаем значения второго массива из первого
    }

    //Задание 8: Поиск Индекса Элемента

    // Создайте массив целых чисел.
    // Найдите индекс элемента со значением 5.
    // Если значения 5 нет в массиве, возвращаем -1.
    // Реши задачу через цикл while.

    val array8 = arrayOf(1, 2, 3, 4, 5)

    var index = 0                      // Начинаем с первого элемента

    while (index < array8.size) {
        if (array8[index] == 5) {
            println("Индекс элемента со значением 5: $index")
            break                    // Если нашли значение 5, выходим из цикла
        }
        index++                      // Увеличиваем индекс
    }

    if (index == array8.size) {
        println("-1")                // Если значение 5 не найдено, выводим -1
    }

    // Задание 9: Перебор Массива

    // Создайте массив целых чисел.
    // Используйте цикл для перебора массива и вывода каждого элемента в консоль.
    // Напротив каждого элемента должно быть написано “чётное” или “нечётное”

    val array9 = arrayOf(1, 2, 3, 4, 5)
    for (i in array9){
        if(i % 2 == 0){
            println("чётное $i")
        }else{
            println("нечётное $i")
        }
    }

    // Задание 10: Поиск Значения в Массиве по вхождению

    // Создай функцию, которая принимает массив строк и строку для поиска.
    // Функция должна находить в массиве элемент, в котором принятая строка является подстрокой (метод contains()).
    // Верни найденный элемент из функции в виде строки.

    val array10 = arrayOf("apple", "banana", "cherry", "date")
    val search = "ban"

////    val result = findStringInArray(array10, search)
//
//    if (result != null) {
//        println("Найден элемент: $result")
//    } else {
//        println("Элемент не найден")
//    }

    // Работа со списками List

    //  Задание 1: Создание Пустого Списка

    // Создайте пустой неизменяемый список целых чисел.

    val list1 = listOf<Int>()

    // Задание 2: Создание и Инициализация Списка
    // Создайте неизменяемый список строк, содержащий три элемента (например, "Hello", "World", "Kotlin").

    val list2 = listOf("Hello", "World", "Kotlin")

    // Задание 3: Создание Изменяемого Списка
    // Создайте изменяемый список целых чисел и инициализируйте его значениями от 1 до 5.

    val list3 = mutableListOf<Int>()    // Создаем изменяемый список

    for (i in 1..5) {
        list3.add(i)                    // Добавляем элементы в список
    }

    // Задание 4: Добавление Элементов в Список
    // Имея изменяемый список целых чисел, добавьте в него новые элементы (например, 6, 7, 8).

    val list4 = mutableListOf<Int>(1, 2, 3, 4, 5)

    for (i in 6..8){
        list4.add(i)                  // Добавляем элементы в список
    }

    // Задание 5: Удаление Элементов из Списка
    // Имея изменяемый список строк, удалите из него определенный элемент (например, "World").

    val list5 = mutableListOf("Hello", "World", "Kotlin")

    list5.remove("World")           // Удаляем элемент "World"

    // Задание 6: Перебор Списка в Цикле
    // Создайте список целых чисел и используйте цикл для вывода каждого элемента на экран.

    val list6 = mutableListOf(1, 2, 3, 4, 5)
    for (i in list6){
        println(i)
    }

    // Задание 7: Получение Элементов Списка по Индексу
    // Создайте список строк и получите из него второй элемент, используя его индекс.

    val list7 = mutableListOf("Hello", "World", "Kotlin")
    println(list7[1])

    // Задание 8: Перезапись Элементов Списка по Индексу
    // Имея изменяемый список чисел, измените значение элемента на определенной позиции
    // (например, замените элемент на позиции 2 на новое значение).

    val list8 = mutableListOf(1, 2, 3, 4, 5, 6)

    // Заменяем элемент на позиции 2 (индекс 1) на новое значение (например, 8)
    list8[1] = 8          // Изменяем элемент на позиции 2 на 8

    // Задание 9: Объединение Двух Списков
    // Создайте два списка строк и объедините их в один новый список, содержащий элементы обоих списков.
    // Реши задачу с помощью циклов.

    val list9_1 = mutableListOf(1, 2, 3, 4)     // Первый список
    val list9_2 = mutableListOf(5, 6, 7)        // Второй список
    val combinedList = mutableListOf<Int>()     // Новый список для объединения

// Добавляем элементы первого списка в новый список
    for (item in list9_1) {
        combinedList.add(item)
    }
// Добавляем элементы второго списка в новый список
    for (item in list9_2) {
        combinedList.add(item)
    }

    // Задание 10: Нахождение Минимального/Максимального Элемента
    // Создайте список целых чисел и найдите в нем минимальный и максимальный элементы используя цикл.

    val list11 = mutableListOf(1, 2, 3, 4, 5)

    var elemMaks = list11[0]  // Инициализируем максимальное значение первым элементом списка
    var elemMini = list11[0]  // Инициализируем минимальное значение первым элементом списка

    for (i in list11) {
        if (i > elemMaks) {
            elemMaks = i  // Обновляем максимальное значение
        }
        if (i < elemMini) {
            elemMini = i  // Обновляем минимальное значение
        }
    }

    // Задание 11: Фильтрация Списка
    // Имея список целых чисел, создайте новый список, содержащий только четные числа из исходного списка используя цикл.

    val list12 = mutableListOf(1, 2, 3, 4, 5, 6)     // Исходный список
    val listEven = mutableListOf<Int>()              // Новый список для четных чисел

// Перебираем исходный список
    for (i in list12) {
        if (i % 2 == 0) {
            listEven.add(i)                           // Добавляем четное число в новый список
        }
    }
    println("Четные числа: $listEven")

    // Работа с Множествами Set

    // Задание 1: Создание Пустого Множества
    // Создайте пустое неизменяемое множество целых чисел.


    val set1 = setOf<Int>()

    // Задание 2: Создание и Инициализация Множества
    // Создайте неизменяемое множество целых чисел, содержащее три различных элемента (например, 1, 2, 3).

    val set2 = setOf(1, 2, 3)

    // Задание 3: Создание Изменяемого Множества
    // Создайте изменяемое множество строк и инициализируйте его несколькими значениями
    // (например, "Kotlin", "Java", "Scala").

    val set3 = mutableSetOf("Kotlin", "Java", "Scala")

    // Задание 4: Добавление Элементов в Множество
    // Имея изменяемое множество строк, добавьте в него новые элементы (например, "Swift", "Go").

    val set4 = mutableSetOf("Kotlin", "Java", "Scala")
    set4.add("Swift")
    set4.add("Go")

    // Задание 5: Удаление Элементов из Множества
    // Имея изменяемое множество целых чисел, удалите из него определенный элемент (например, 2).

    val set5 = mutableSetOf(1, 2, 3, 4, 5)
    set5.remove(2)

    // Задание 6: Перебор Множества в Цикле
    // Создайте множество целых чисел и используйте цикл для вывода каждого элемента на экран.

    val set6 = mutableSetOf(1, 2, 3, 4, 5)
    for (i in set6){
        println(i)
    }

    // Задание 8: Объединение Двух Множеств
    // Создайте два множества строк и объедините их в одно новое множество,
    // содержащее все уникальные элементы обоих множеств. Реши задачу с помощью циклов.

    val set8_1 = mutableSetOf(1, 2, 3, 4)
    val set8_2 = mutableSetOf(4, 5, 6, 8)
    val emtySet = mutableSetOf<Int>()

    for (i in set8_1){
        emtySet.add(i)
    }
    for (j in set8_2){
        emtySet.add(j)
    }

    // Задание 9: Нахождение Пересечения Множеств
    // Создайте два множества целых чисел и найдите их пересечение (общие элементы).
    // Реши задачу через вложенные циклы.

    val set9_1 = mutableSetOf(1, 2, 3, 4)
    val set9_2 = mutableSetOf(3, 4, 5, 6)
    val emtset  = mutableSetOf<Int>()

    for (i in set9_1){
        for (j in set9_2){
            if (i == j){
                emtset.add(i)
            }
        }
    }

    // Задание 10: Нахождение Разности Множеств
    // Создайте два множества строк и найдите разность первого множества относительно второго
    // (элементы, присутствующие в первом множестве, но отсутствующие во втором).
    // Реши задачу через вложенные циклы и переменные флаги.

    val set10_1 = mutableSetOf(1, 2, 3, 5)
    val set10_2 = mutableSetOf(2, 5, 6, 7)
    val differenceSet = mutableSetOf<Int>()

    // Проходим по каждому элементу первого множества
    for (i in set10_1) {
        var isInSecondSet = false  // Флаг для проверки, есть ли элемент во втором множестве

        // Вложенный цикл для поиска элемента во втором множестве
        for (j in set10_2) {
            if (i == j) {
                isInSecondSet = true  // Если элемент найден, устанавливаем флаг в true
                break  // Прерываем внутренний цикл, так как элемент найден
            }
        }
        // Если элемент не найден во втором множестве, добавляем его в множество разности
        if (!isInSecondSet) {
            differenceSet.add(i)
        }

        //Задание 11: Конвертация Множества в Список
        //Создайте множество строк и конвертируйте его в список с использованием цикла.

        val set11 = mutableSetOf(1, 2, 3, 4, 5)
        val list11 = mutableListOf<Int>()

        for (i in set11){
            list11.add(i)
        }

    }
    fun findStringInArray(array: Array<String>, searchString: String): String? {
        for (element in array) {
            if (element.contains(searchString)) {
                return element  // Возвращаем найденный элемент
            }
        }
        return null  // Возвращаем null, если ничего не найдено

    }    }

// Задание 7: Проверка Наличия Элемента в Множестве
//Создай функцию, которая принимает множество строк (set) и строку и проверяет,
// есть ли в множестве указанная строка. Нужно вернуть булево значение true если строка есть.
// Реши задачу через цикл.

//    fun containsString(set: Set<String>, value: String): Boolean {
//        for (item in set) {
//            if (item == value) {
//                return true  // Если строка найдена, возвращаем true
//            }
//        }
//        return false  // Если строка не найдена, возвращаем false
//    }