package org.sergei.org.kotlincourse.lesson7

import org.sergei.org.kotlincourse.lesson3.count

//Задания для Цикла for

//Прямой Диапазон:

//Напишите цикл for, который выводит числа от 1 до 5.

fun main(){
//    for (i in 1..5){
//        println(i)
//    }

    //Напишите цикл for, который выводит четные числа от 1 до 10.

//    for (i in 1..10) {
//        if(i % 2 == 0) {
//            println(i)
//        }
//
//    }

    //Обратный Диапазон:

    //Создайте цикл for, который выводит числа от 5 до 1.

//    for (i in 5 downTo 1){
//        println(i)
//    }
    //Создайте цикл for, который выводит числа от 10 до 1, уменьшая их на 2.
//    for (i in 10 downTo 1){
//        println(i - 2)
//    }



    //С Шагом (step):

    //Используйте цикл for с шагом 2 для вывода чисел от 1 до 9.
//    for (i in 1..9 step 2){
//        println(i)
//    }

    //Напишите цикл for, который выводит каждое третье число в диапазоне от 1 до 20.
//    for (i in 1..20 step 3){
//        println(i)
//    }

    //Использование До (until):

    //Используйте цикл for и until, чтобы вывести числа из диапазона 1-9 (9 не включается).
//    for (i in 1 until 9){
//        println(i)
//    }

    //Напишите цикл for с until, чтобы вывести числа от 3 до 15, не включая 15.
//    for (i in 3 until 15){
//        println(i)
//    }

    //Задания для Цикла while

    //Создайте цикл while, который выводит квадраты чисел от 1 до 5

//    var qvadrat = 1
//    while (qvadrat ++ <= 5){
//        println(qvadrat * qvadrat) //создаём квадрат числа
//    }

    //Напишите цикл while, который уменьшает число от 10 до 5.
    // После этого вывести результат в консоль

//    var number = 10
//    while (number-- >= 5) {
//        println(number) // Выводим текущее значение числа
//    }

    //Цикл do...while:

    //Используйте цикл do...while, чтобы вывести числа от 5 до 1

//        var number = 5
//        do {
//            println(number)     // Выводим текущее значение переменной number
//            number--            // Уменьшаем значение на 1
//        } while (number >= 1)   // Условие для продолжения цикла

    //Создайте цикл do...while, который повторяется, пока счетчик меньше 10, начиная с 5.

//        var number = 5
//        do {
//            println(number) // Выводим текущее значение переменной number
//            number ++ // Увеличеваем значение на 1
//        } while (number <= 10)  // Условие для продолжения цикла

    //Задания для Прерывания и Пропуска Итерации

        //Использование break:

        //Напишите цикл for от 1 до 10 и используйте break, чтобы выйти из цикла при достижении 6.

//        for (i in 1..10){
//                if (i == 6){           // Если переменная равна 6 то мы останавливаем цикл
//                    break
//                }
//            println(i)
//        }

        //Создайте цикл while, который бесконечно выводит числа, начиная с 1, но прерывается при достижении 10.
//        var countr = 1
//        while (countr > 0){
//            if (countr == 10){           // Если переменная равна 10 то цикл прекоащает работу
//                break
//            }
//        println(countr)
//            countr++
//        }

    //Использование continue:

    //В цикле for от 1 до 10 используйте continue, чтобы пропустить четные числа.

//        for (i in 1..10){
//            if(i % 2 == 0){          // если в переменой встречается числа кратные 2 то мы их пропускаем
//                continue
//            }
//        println(i)
//        }

    //Напишите цикл while, который выводит числа от 1 до 10, но пропускает числа, кратные 3.
//    var countr = 1
//    while (countr <= 10) {               // Условие для цикла: от 1 до 10
//        if (countr % 3 == 0) {
//            countr++                      // Пропускаем числа, кратные 3
//            continue                      // Переходим к следующей итерации цикла
//        }
//        println(countr)                   // Выводим текущее значение
//        countr++                          // Увеличиваем значение
//    }

    //Задача на вложенный цикл

    //Создать цикл в цикле, в каждом использовать диапазон от 1 до 10.
// В консоль вывести результат умножения переменных цикла.
// Результат умножения выводить через print() и добавлять ещё один print(“ ”) с пробелом, чтобы отделять значения в строку.
// После вложенного цикла выводить пустой println() чтобы следующий проход начинать с новой строки. Результат должен быть как на картинке.

//    for (i in 1..10) {
//        for (j in 1..10) {
//            print("${i * j} ")                    // Вывод результата умножения и пробел
//        }
//        println()                                  // Переход на новую строку после завершения внутреннего цикла
//    }
//




    // Дополнительные задания





     //Вывод чисел от 1 до 10: Напишите программу, которая выводит числа от 1 до 10 с использованием цикла while.

    var countr = 1
    while(true){
        if (countr == 11) break
        println(countr++)
    }

     //Четные числа до 20: Используя цикл while, выведите все четные числа от 2 до 20.

    var countr = 1
    while (countr <= 20) {
        if(countr % 2 == 0)
        println(countr)
        countr ++    // Увеличиваем countr на 2, чтобы получить следующее четное число
    }

    // Сумма чисел от 1 до 50: Напишите программу, которая суммирует числа от 1 до 50 с помощью цикла while.

    var sum = 0
    var countr = 1
    while (countr <= 50) {
        sum += countr++  // Добавляем countr к сумме
    }
    println(sum)  // Выводим результат



    // Вывод чисел от 10 до 1: Используя цикл do while, выведите числа от 10 до 1.

    var countr = 10
    do {
        println(countr)
    } while (countr-- > 1)




    // Факториал числа 5: Напишите программу, которая вычисляет факториал числа 5 с использованием цикла while.

    var result = 1
     countr = 1

    while (countr <= 5) {
        result *= countr++  // Умножаем результат на текущий countr
    }

    println(result)

    // Сумма четных чисел до 100: Используя цикл while, найдите сумму всех четных чисел от 2 до 100.

     countr = 2  // Начинаем с 2, так как это первое четное число
    var sum = 0

    while (countr <= 100) { //if
        sum += countr  // Добавляем текущее четное число к сумме
        countr += 2    // Переходим к следующему четному числу
    }

    println(sum)

    // Таблица умножения на 3: Напишите программу, которая выводит таблицу умножения на 3.

    for (i in 1..10) {
        println("$i * 3 = ${i * 3}")
    }

    // Вывод символов до точки: Используя цикл do while, выведите символы строки "Kotlin." по одному до точки.

    val text = "Kotlin."
    var index = 0

    do {
        val char = text[index]
        if (char == '.') break  // Останавливаем цикл, если встречаем точку
        println(char)           // Выводим текущий символ
        index++
    } while (index < text.length)

    // Наибольшее число из списка: Напишите программу, которая находит наибольшее число из заданного списка чисел с использованием цикла while.
    //Пример списка: [5, 12, 7, 22, 9]

    val list = listOf(5, 12, 7, 22, 9)  // Инициализируем список
    var index = 0
    var maxNumber = list[0]  // Изначально предполагаем, что первый элемент - максимальный

    // Цикл для перебора всех элементов списка
    while (index < list.size) {
        if (list[index] > maxNumber) {
            maxNumber = list[index]  // Обновляем максимальное число
        }
        index++  // Переходим к следующему элементу
    }

    println("Наибольшее число: $maxNumber")

    // Генерация чисел до 15: Используя цикл do while, напишите программу, которая генерирует и выводит числа от 1 до 15.

    var countr = 1

    do {
        println(countr)  // Выводим текущее значение countr
        countr++         // Увеличиваем countr на 1
    } while (countr <= 15)  // Цикл продолжается, пока countr меньше или равен 15

    // Простые числа до 20: Напишите программу, которая выводит все простые числа до 20 с использованием цикла while.
// посмотреть
    var number = 2  // Начинаем с 2, так как это первое простое число

    while (number <= 20) {
        var isPrime = true  // Предполагаем, что число простое

        // Проверяем, делится ли number на любое число от 2 до sqrt(number)
        var divisor = 2
        while (divisor * divisor <= number) {
            if (number % divisor == 0) {  // Если делится на divisor
                isPrime = false  // Число не простое
                break  // Выходим из внутреннего цикла
            }
            divisor++  // Увеличиваем делитель
        }

        // Если число простое, выводим его
        if (isPrime) {
            println(number)
        }

        number++  // Переходим к следующему числу
    }

    // Обратный порядок элементов массива: Создайте массив из 10 элементов и выведите его элементы в обратном порядке с помощью цикла while.

    val array = arrayOf(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)  // Инициализация массива из 10 элементов
    var index = array.size - 1  // Устанавливаем индекс на последний элемент массива

    // Используем цикл while для обхода массива в обратном порядке
    while (index >= 0) {
        println(array[index])  // Выводим текущий элемент
        index--  // Уменьшаем индекс для перехода к предыдущему элементу

    }

    // Количество итераций до 100:
    // Напишите программу, которая увеличивает счетчик на 1 в цикле while до тех пор, пока значение счетчика не достигнет 100.
    // Выведите количество итераций.

    var counter = 0  // Инициализируем счетчик
    var iterations = 0  // Инициализируем счетчик итераций

    while (counter < 100) {
        counter++  // Увеличиваем счетчик на 1
        iterations++  // Увеличиваем количество итераций на 1
    }

    println("Количество итераций: $iterations")  // Выводим количество итераций


    // Прямоугольник из символов: Используя вложенные циклы while,
    // выведите прямоугольник размером 5x3 из символов *.

    val rows = 3  // Количество строк
    val columns = 5  // Количество столбцов
    var row = 0  // Инициализируем счетчик строк

    while (row < rows) {
        var column = 0  // Инициализируем счетчик столбцов для каждой строки

        while (column < columns) {
            print("* ")  // Выводим символ * с пробелом
            column++  // Увеличиваем счетчик столбцов
        }

        println()  // Переходим на новую строку после завершения столбцов
        row++  // Увеличиваем счетчик строк
    }


    // Числа Фибоначчи до 50:
// Напишите программу, которая выводит все числа Фибоначчи, не превышающие 50, с использованием цикла while.

    var a = 0  // Первое число Фибоначчи
    var b = 1  // Второе число Фибоначчи

    while (a <= 50) {
        println(a)  // Выводим текущее число Фибоначчи
        val next = a + b  // Вычисляем следующее число Фибоначчи
        a = b  // Переносим b в a
        b = next  // Переносим следующее число в b
    }

    //Счетчик шагов: Создайте программу, которая считает шаги от 0 до 30 с шагом 5, используя цикл while.

    var step = 0  // Инициализируем счетчик шагов

    while (step <= 30) {
        println(step)  // Выводим текущее значение счетчика
        step += 5  // Увеличиваем счетчик на 5
    }

    // Среднее значение фиксированного списка чисел:
    // Найдите среднее значение чисел из списка [4, 8, 15, 16, 23, 42] с помощью цикла while.

    val numbers = listOf(4, 8, 15, 16, 23, 42)  // Фиксированный список чисел
    var sum = 0  // Переменная для хранения суммы чисел
    var index = 0  // Индекс для перебора элементов списка

    // Цикл while для обхода списка
    while (index < numbers.size) {
        sum += numbers[index]  // Добавляем текущее число к сумме
        index++  // Увеличиваем индекс для перехода к следующему элементу
    }

    // Вычисляем среднее значение
    val average = sum.toDouble() / numbers.size

    println("Среднее значение: $average")

    // Таблица умножения с вложенными циклами:
    // Используя вложенные циклы do while, напишите программу для вывода таблицы умножения от 1 до 5.

    var i = 1  // Счетчик для строк

    do {
        var j = 1  // Счетчик для столбцов
        do {
            print("$i * $j = ${i * j}\t")  // Выводим произведение
            j++  // Увеличиваем счетчик столбцов
        } while (j <= 5)  // Внутренний цикл для столбцов
        println()  // Переход на новую строку после завершения столбцов
        i++  // Увеличиваем счетчик строк
    } while (i <= 5)

    // Сумма чисел в диапазоне:
    // Напишите программу, которая находит сумму чисел от 10 до 30 с использованием цикла while.

    var sum = 0  // Переменная для хранения суммы
    var number = 10  // Начальное значение

    // Цикл while для нахождения суммы чисел от 10 до 30
    while (number <= 30) {
        sum += number  // Добавляем текущее число к сумме
        number++  // Увеличиваем текущее число на 1
    }

    println("Сумма чисел от 10 до 30: $sum")

    // Сумма четных и нечетных чисел:
    // Используя цикл while, найдите отдельно сумму четных и сумму нечетных чисел от 1 до 20.

    var evenSum = 0  // Переменная для суммы четных чисел
    var oddSum = 0   // Переменная для суммы нечетных чисел
    var number = 1   // Начальное значение

    // Цикл while для нахождения сумм
    while (number <= 20) {
        if (number % 2 == 0) {
            evenSum += number  // Если число четное, добавляем его к четной сумме
        } else {
            oddSum += number    // Если число нечетное, добавляем его к нечетной сумме
        }
        number++  // Увеличиваем текущее число на 1
    }

    println("Сумма четных чисел от 1 до 20: $evenSum")
    println("Сумма нечетных чисел от 1 до 20: $oddSum")
}

